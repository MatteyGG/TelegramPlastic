import dotenv from "dotenv";
import { bot } from "./lib/context";
import { register_admin } from "./handlers/admin";
import { register_commands } from "./handlers/commands";
import { register_message } from "./handlers/messages";
import { hydrateFiles } from "@grammyjs/files";
import { limit } from "@grammyjs/ratelimiter";
import { getResponse, loadConfig } from "./modules/getConfig";
import { initSearch } from "./modules/search";
import { printBanner } from "./modules/printBanner";
import { LOGGER_DIR, mainLogger } from "./modules/logger";
import { chatCache } from "./modules/cache";




// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–æ–≤
async function registerPlugins() {
  bot.api.config.use(hydrateFiles(bot.token));
  bot.use(limit({
    timeFrame: 3000,
    limit: 1,
    onLimitExceeded: async (ctx) => {
      await ctx.reply(getResponse("ratelimit"));
    },
  }));
}

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
async function setupBot() {
  await loadConfig();
  register_commands();
  register_admin(); // –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã (/getcache)
  register_message(); // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–∏ÃÜ

}

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async function bootstrap() {
  try {
    await printBanner();
    await registerPlugins();
    await setupBot();
    mainLogger.info(`LOGGER_DIR: ${LOGGER_DIR}`);
    mainLogger.info(`LOGGER_DIR: ${LOGGER_DIR}`);

    bot.start({
      onStart: (info) => mainLogger.info(`ü§ñ–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ ${info.username}`),
      drop_pending_updates: true,
    });

  } catch (error) {
    console.error("üí• –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:", error);
    process.exit(1);
  }
}

bootstrap();

setInterval(async () => {
  console.log('–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–æ–≤...');
  
  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–ª—é—á–∏ –∫—ç—à–∞
  const activeChats = Array.from(chatCache['cache'].keys());
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞
  for (const chatId of activeChats) {
    await chatCache.forceSave(chatId);
  }
  
  console.log(`–°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∏—Å—Ç–æ—Ä–∏—è –¥–ª—è ${activeChats.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤`);
}, 5 * 60 * 1000); // 5 –º–∏–Ω—É—Ç

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.catch((err) => {
  const ctx = err.ctx;
  console.error(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ ${ctx.update.update_id}:`, err.error);
  ctx.reply("üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞").catch(console.error);
});
