import dotenv from "dotenv";
import { bot } from "./lib/context";
import { register_admin } from "./handlers/admin";
import { register_commands } from "./handlers/commands";
import { register_message } from "./handlers/messages";


// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
async function setupBot() {
  register_commands();
  register_admin(); // –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã (/getcache)
  register_message(); // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–∏ÃÜ

}

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async function bootstrap() {
  try {
    setupBot();
    bot.start({
      onStart: (info) => console.log(`ü§ñ–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ ${info.username}`),
      drop_pending_updates: true,
    });

  } catch (error) {
    console.error("üí• –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:", error);
    process.exit(1);
  }
}

bootstrap();

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.catch((err) => {
  const ctx = err.ctx;
  console.error(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ ${ctx.update.update_id}:`, err.error);
  ctx.reply("üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞").catch(console.error);
});
